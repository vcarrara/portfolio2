{"version":3,"file":"component---src-pages-all-projects-js-76e136d5d9ed809da05b.js","mappings":"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","sources":["webpack://portfolio-gatsby/./src/components/views/LandingView.js","webpack://portfolio-gatsby/./src/components/organisms/Timeline.js","webpack://portfolio-gatsby/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://portfolio-gatsby/./src/components/views/TimelineView.js","webpack://portfolio-gatsby/./src/pages/all-projects.js"],"sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\nimport tw from 'twin.macro'\nimport { Badge, Container, Title } from '../atoms'\n\nconst StyledLink = tw(\n    Link\n)`inline-flex items-center border border-transparent px-3.5 py-2 text-sm leading-4 font-medium rounded-full shadow-sm text-white bg-primary-500 hover:bg-primary-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-600`\nconst Display = tw.h1`text-8xl font-bold`\nconst StyledParagraph = tw.p`font-medium text-base text-justify`\n\nconst LandingView = ({ categories, totalCount }) => {\n    return (\n        <Container tw=\"space-y-28\">\n            {/* Title */}\n            <div tw=\"grid grid-cols-12\">\n                <div tw=\"col-span-1 text-5xl flex flex-col items-center justify-center space-y-8\">\n                    <a href=\"https://github.com/vcarrara\" target=\"_blank\" rel=\"noreferrer\">\n                        <i className=\"fab fa-github\"></i>\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/victor-carrara/\" target=\"_blank\" rel=\"noreferrer\">\n                        <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                </div>\n                <div tw=\"col-start-3 col-span-9 space-y-8\">\n                    <div>\n                        <Display>Hi!</Display>\n                        <Display>\n                            I am <span tw=\"text-primary-500\">Victor</span>\n                        </Display>\n                    </div>\n                    <Display tw=\"text-6xl\">Software Engineer</Display>\n                    <div tw=\"space-y-8\">\n                        <StyledParagraph>\n                            I am currently studying an engineering degree in computing sciences with a specialization in{' '}\n                            <span tw=\"text-primary-500\">software innovation</span>. I am someone dynamic, motivated, professional and I can work in teams as\n                            much as alone. My past experiences have proven that I am able to work with lots of different problematic and technologies.\n                        </StyledParagraph>\n                        <StyledLink to=\"/all-projects\">Discover my work</StyledLink>\n                    </div>\n                </div>\n            </div>\n            {/* Introduction */}\n            <div tw=\"space-y-12\">\n                <div tw=\"space-y-4\">\n                    <Title>What I do</Title>\n                    <StyledParagraph>\n                        I have spent the last five years surpassing myself in my training and professional experiences to give me the means to excel in what I\n                        am engaged in. I put my skills, my creativity, my curiosity and my ethic to the benefit of my projects and I always learn from a past\n                        experience, no matter the result. Thanks to the plurality of professional, school and personal projects that I have realised in teams, I\n                        will use my knowledges, my skills and my experience to be proficient on what I am working on.\n                    </StyledParagraph>\n                </div>\n                {/* Cards */}\n                <div tw=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    {categories.map(({ id, html, frontmatter, count }) => (\n                        <div key={id} tw=\"rounded-2xl bg-texture-600 p-6 space-y-4\">\n                            <div tw=\"space-x-2 text-3xl\">\n                                {frontmatter.icons.map(([description, className]) => (\n                                    <span title={description} key={`devicon_${className}`}>\n                                        <i className={className}></i>\n                                    </span>\n                                ))}\n                            </div>\n                            <h2 tw=\"text-2xl font-bold\">\n                                {frontmatter.title}\n                                <Badge tw=\"ml-3\">{count}</Badge>\n                            </h2>\n                            <div tw=\"font-medium text-base\" dangerouslySetInnerHTML={{ __html: html }} />\n                            <StyledLink to={frontmatter.uri}>Learn more</StyledLink>\n                        </div>\n                    ))}\n                    <h2 tw=\"text-base font-bold\">\n                        <Link tw=\"underline\" to=\"/all-projects\">\n                            See all\n                        </Link>\n                        <Badge tw=\"ml-3\">{totalCount}</Badge>\n                    </h2>\n                </div>\n            </div>\n            {/* Testimonials */}\n            <div tw=\"space-y-8\">\n                <Title>They trust me</Title>\n                <blockquote tw=\"space-y-10 text-center\">\n                    <i className=\"fas fa-quote-right\" tw=\"text-5xl\"></i>\n                    <StyledParagraph tw=\"mt-6 text-base\">\n                        Victor was working in my team as an intern in 2019. His task was to prototype some new user interface architecture for our BBj product\n                        platform. His ability to understand quickly, combined with his solid knowledge and expertise, allowed him to quickly deliver valuable\n                        results which exceeded our expectations. He was able to successfully combine field knowledge of software development practices and\n                        architecture with concrete development work in our Java-based BBj environment and in HTML5, JavaScript, and React components in\n                        particular. Victor will be an asset for most any professional team that can make use of his energy, high work ethics, and knowledge. He\n                        will always find open doors in my team, should our ways ever cross again.\n                    </StyledParagraph>\n                    <p tw=\"text-base font-medium\">- PhD. Stephan Wald, CEO of Basis Europe Distribution GmbH (Saarbr√ºcken, Germany)</p>\n                </blockquote>\n            </div>\n        </Container>\n    )\n}\n\nexport default LandingView\n","import React from 'react'\nimport tw, { styled } from 'twin.macro'\n\nconst TimelineYear = styled.div``\nconst TimelineGroup = styled.div``\nconst TimelineDate = styled.div``\nconst TimelineContent = styled.div``\n\nconst Timeline = styled.div`\n    ${tw`relative flex flex-col py-12 space-y-16`}\n    &::before {\n        content: '';\n        left: 30px;\n        z-index: -1;\n        ${tw`absolute w-1 h-full bg-primary-500 top-0`}\n    }\n\n    ${TimelineYear} {\n        border-radius: 40px;\n        padding: 0.7rem;\n        ${tw`bg-primary-500 w-16 text-center`}\n    }\n\n    ${TimelineGroup} {\n        ${tw`flex flex-row justify-between text-center`}\n\n        ${TimelineDate} {\n            margin-left: 22px;\n            ${tw`flex items-center rounded-full w-5 h-5 bg-primary-500`}\n            &::after {\n                content: '';\n                width: calc(100% - 22px);\n                height: 2px;\n                z-index: -1;\n                left: 22px;\n                ${tw`absolute bg-primary-500`}\n            }\n        }\n        ${TimelineContent} {\n            width: 500px;\n            border: 2px solid;\n            ${tw`rounded-2xl bg-texture-600 p-6 border-primary-500`}\n        }\n    }\n`\n\nconst TimelineEntry = ({ children, ...props }) => (\n    <TimelineGroup {...props}>\n        <TimelineDate />\n        <TimelineContent>{children}</TimelineContent>\n    </TimelineGroup>\n)\n\nexport { Timeline, TimelineYear, TimelineEntry }\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport 'twin.macro'\nimport { Container, Badge } from '../atoms'\nimport { Timeline, TimelineEntry, TimelineYear } from '../organisms/Timeline'\n\nconst TimelineView = ({ title, total, items }) => {\n    return (\n        <Container tw=\"space-y-8\">\n            <div tw=\"space-y-4\">\n                <h1 tw=\"text-6xl font-bold\">{title}</h1>\n                <div>\n                    <Badge>{total}</Badge> results found.\n                </div>\n            </div>\n            <Timeline>\n                {items\n                    .sort((a, b) => b.fieldValue - a.fieldValue)\n                    .map(({ fieldValue, nodes }) => (\n                        <React.Fragment key={fieldValue}>\n                            <TimelineYear>{fieldValue}</TimelineYear>\n                            {nodes.map(({ id, html, frontmatter }) => (\n                                <div key={id}>\n                                    <TimelineEntry>\n                                        <div tw=\"space-y-8\">\n                                            <h3 tw=\"text-3xl font-bold\">{frontmatter.title}</h3>\n                                            <div tw=\"text-justify\" dangerouslySetInnerHTML={{ __html: html }} />\n                                            <div tw=\"space-x-1 text-4xl\">\n                                                {frontmatter.icons.map(([title, className]) => (\n                                                    <span key={title} title={title}>\n                                                        <i className={className}></i>\n                                                    </span>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    </TimelineEntry>\n                                </div>\n                            ))}\n                        </React.Fragment>\n                    ))}\n            </Timeline>\n        </Container>\n    )\n}\n\nexport default TimelineView\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { MainLayout } from '../components/layouts'\nimport { TimelineView } from '../components/views'\n\nconst AllProjectsPage = ({ data }) => {\n    const {\n        topics: { group, totalCount },\n    } = data\n\n    return (\n        <MainLayout>\n            <TimelineView items={group} total={totalCount} title=\"All projects\" />\n        </MainLayout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query {\n        topics: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/topics/.*md$/\" } }) {\n            totalCount\n            group(field: frontmatter___date) {\n                fieldValue\n                nodes {\n                    html\n                    frontmatter {\n                        categories\n                        date\n                        icons\n                        title\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default AllProjectsPage\n"],"names":["StyledLink","tw","Link","Display","StyledParagraph","categories","totalCount","href","target","rel","className","to","map","id","html","frontmatter","count","key","icons","description","title","dangerouslySetInnerHTML","__html","uri","TimelineYear","styled","TimelineGroup","TimelineDate","TimelineContent","Timeline","TimelineEntry","children","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","total","items","sort","a","b","fieldValue","nodes","data","topics","group"],"sourceRoot":""}